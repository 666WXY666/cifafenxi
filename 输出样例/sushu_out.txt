类型			表达式
分隔符			#
标识符			include
运算符			<
标识符			stdio
运算符			.
标识符			h
运算符			>
关键字			int
标识符			main
运算符			(
运算符			)
分隔符			{
关键字			int
标识符			m
分隔符			,
标识符			n
分隔符			,
标识符			i
分隔符			;
关键字			while
运算符			(
标识符			m
运算符			-
运算符			-
运算符			)
分隔符			{
标识符			scanf
运算符			(
分隔符			"
运算符			%
标识符			d
分隔符			"
分隔符			,
运算符			&
标识符			n
运算符			)
分隔符			;
关键字			for
运算符			(
标识符			i
运算符			=
数字			2
分隔符			;
标识符			i
运算符			<
标识符			n
分隔符			;
标识符			i
运算符			+
运算符			+
运算符			)
关键字			if
运算符			(
标识符			n
运算符			%
标识符			i
运算符			==
数字			0
运算符			)
关键字			break
分隔符			;
关键字			if
运算符			(
标识符			i
运算符			==
标识符			n
运算符			)
标识符			printf
运算符			(
分隔符			"
运算符			%
标识符			d
标识符			is
标识符			a
标识符			sushu
转义符			\
标识符			n
分隔符			"
分隔符			,
标识符			n
运算符			)
分隔符			;
关键字			else
标识符			printf
运算符			(
分隔符			"
运算符			%
标识符			d
标识符			is
标识符			not
标识符			a
标识符			sushu
转义符			\
标识符			n
分隔符			"
分隔符			,
标识符			n
运算符			)
分隔符			;
分隔符			}
关键字			return
数字			0
分隔符			;
分隔符			}
---------------------------------------------------------------------
表达式			个数
#			1
include			1
<			2
stdio			1
.			1
h			1
>			1
int			2
main			1
(			8
)			8
{			2
m			2
,			5
n			9
i			6
;			8
while			1
-			2
scanf			1
"			6
%			4
d			3
&			1
for			1
=			1
2			1
+			2
if			2
==			2
0			2
break			1
printf			2
is			2
a			2
sushu			2
\			2
else			1
not			1
}			2
return			1
---------------------------------------------------------------------
类型			个数
分隔符			24
标识符			34
运算符			32
关键字			9
数字			3
转义符			2
---------------------------------------------------------------------
源程序共有18行。
源程序共有104个单词。
源程序共有169个字符。
